/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author makis
 */
public class Editor_PageOrganisation extends javax.swing.JFrame {

    /**
     * Creates new form PageOrganisation
     */
    public Editor_PageOrganisation() {
        initComponents();
        setLocationRelativeTo(null);
        Statement stmt =null;
        try {
            Connection conn;
            conn = DriverManager.getConnection("jdbc:mysql://localhost/project_db","root","pass123");           
            stmt = conn.createStatement();
            String query = "select checking.chief,checking.article,checking.comments,checking.approval,checking.approval_date,article.pages from CHECKING inner join article on article.art_path = checking.article where checking.chief = 'giannis.spirou@gmail.com' and checking.approval = 'accept'";

            ResultSet rs = stmt.executeQuery(query);

            rs.beforeFirst();
               
            String[] columnNames = {"CHIEF", "ARTICLE", "COMMENTS","APPROVAL","CHECKING_DATE","PAGES"};
            DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0);
            while (rs.next()) {
                String chief = rs.getString("checking.chief");
                String article = rs.getString("checking.article");
                String comments = rs.getString("checking.comments");
                String approval = rs.getString("checking.approval");  
                String approval_date = rs.getString("checking.approval_date"); 
                String pages = rs.getString("article.pages");

                // create a single array of one row's worth of data
                String[] data = { chief,article,comments,approval,approval_date,pages} ;

                // and add this row of data into the table model
                tableModel.addRow(data);
                
            }
            jTable1.setModel(tableModel);

           /*jTable1.setPreferredScrollableViewportSize(new Dimension(1600, 400));
            jTable1.setFillsViewportHeight(true);*/

        }
        catch (Exception er) {System.err.println(er);}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(45, 67, 0));

        jLabel1.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 255, 255));
        jLabel1.setText("PAGE ORGANISATION");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 255, 255)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CHIEF", "ARTICLE", "COMMENTS", "APPROVAL", "APPROVAL_DATE", "PAGES"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 255, 0));
        jLabel2.setText("ARTICLES TO USE");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NEWSPAPER NAME", "PAPER NUMBER", "ARTICLE", "POSITION"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel3.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 255, 0));
        jLabel3.setText("PAPER ORGANISATION USING ABOVE ARTICLES");

        jButton1.setBackground(new java.awt.Color(0, 51, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 255, 255));
        jButton1.setText("APPLY");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addContainerGap(18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(279, 279, 279))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(329, 329, 329)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PreparedStatement pst;
        PreparedStatement ps;    
        try{
                int rows =jTable2.getRowCount();
                Connection conn;
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/project_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","pass123");           
                conn.setAutoCommit(false);

                String query = "INSERT INTO PAGE_ORGANISATION  values (?,?,?,?)";
                /*String query2 = "DELETE FROM CHECKING WHERE CHECKING.article = ?";*/
                pst = conn.prepareStatement(query);
                /*ps = conn.prepareStatement(query2);*/
                for(int row = 0; row<rows; row++)
                {
                    String newspaper = (String)jTable2.getValueAt(row, 0);
                    Integer paper = Integer.parseInt((String)jTable2.getValueAt(row, 1));
                    String path = (String)jTable2.getValueAt(row, 2);
                    Integer pos = Integer.parseInt((String)jTable2.getValueAt(row, 3));
                    /*String del = path;*/
                    if(checkPath(path) && !checkPos(pos,paper) && !checkNewsp(newspaper) && checkPaper(paper)){        
                            pst.setString(1, newspaper);
                            pst.setInt(2, paper);
                            pst.setString(3, path);
                            pst.setInt(4, pos);
                            /*ps.setString(1, del);*/

                            pst.addBatch();
                            pst.executeBatch();
                            conn.commit();
                    }
                }JOptionPane.showMessageDialog(null, "The paper has been organised");
                }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"errror");
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public boolean checkNewsp(String newspaper)
    {
        PreparedStatement ps;
        ResultSet rs;
        String journ = newspaper;
        boolean journ_exist = false;
        
        String query = "SELECT * FROM newspaper WHERE name_news = ? ";
        
        try {
            Connection conn;
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/project_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","pass123");           
            ps = conn.prepareStatement(query);            
            ps.setString(1, journ);
            System.out.println("checkJourn");
            rs = ps.executeQuery();
            
            if(!rs.next())
            {
                journ_exist = true;
                JOptionPane.showMessageDialog(null, "The newspaper doesn't exists");
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            System.out.println("here3");
        }
        
        return journ_exist;
    }
    
    
    public boolean checkPath(String apath)
    {    
        PreparedStatement ps;
        ResultSet rs;
        String path = apath;
        boolean path_exist = false;
        
        String query = "SELECT * FROM SUBMISSION WHERE article = ?";
        
        try {
            Connection conn;
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/project_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","pass123");           
            ps = conn.prepareStatement(query);
            ps.setString(1, path);
            rs = ps.executeQuery();
            if(rs.next())
            {
                path_exist = true;
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
        return path_exist;
    }
    
    public boolean checkPaper(Integer paper)
    {
        PreparedStatement ps;
        ResultSet rs;
        Integer journ = paper;
        boolean journ_exist = false;
        
        String query = "SELECT * FROM paper WHERE paper_num = ? ";
        
        try {
            Connection conn;
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/project_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","pass123");           
            ps = conn.prepareStatement(query);            
            ps.setInt(1, journ);
            System.out.println("checkJourn");
            rs = ps.executeQuery();
            
            if(rs.next())
            {
                journ_exist = true;
            }else{JOptionPane.showMessageDialog(null, "The paper doesn't exists");}
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            System.out.println("here3");
        }
        
        return journ_exist;
    }    
    
    public boolean checkPos(Integer pos,Integer paper)
    {
        PreparedStatement ps;
        ResultSet rs;
        Integer journ = pos;
        Integer journ2 = paper;
        boolean journ_exist = true;
        
        String query = "SELECT * FROM page_organisation WHERE position = ? and papernum = ?";
        
        try {
            Connection conn;
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/project_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC","root","pass123");           
            ps = conn.prepareStatement(query);            
            ps.setInt(1, journ);
            ps.setInt(2, journ2);
            System.out.println("checkJourn");
            rs = ps.executeQuery();
            
            if(!rs.next())
            {
                journ_exist = false;
                System.out.println("not found");
                
            }else{JOptionPane.showMessageDialog(null, "There is already article in this position");}
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            System.out.println("here3");
        }
        
        return journ_exist;
    }    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor_PageOrganisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor_PageOrganisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor_PageOrganisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor_PageOrganisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor_PageOrganisation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
